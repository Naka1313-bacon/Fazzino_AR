import { Camera, ColorRepresentation, Object3D, Scene, ShaderMaterial, Vector3 } from "three";
export declare class SceneHelper {
    debugRoot?: Object3D;
    meshCursor: Object3D | null;
    scene: Scene;
    secondaryDebugRoot?: Object3D;
    simpleScene: Scene;
    constructor(scene: Scene, simpleScene: Scene);
    setupMeshCursor(): void;
    destroyMeshCursor(): void;
    setMeshCursorVisibility(visible: boolean): void;
    setMeshCursorPosition(position: Vector3): void;
    positionAndOrientMeshCursor(position: Vector3, camera: Camera): void;
    addDebugMeshes(): void;
    createDebugMeshes(renderOrder?: number): Object3D<import("three").Object3DEventMap>;
    createSecondaryDebugMeshes(renderOrder?: number): Object3D<import("three").Object3DEventMap>;
    static buildDebugMaterial(color: ColorRepresentation): ShaderMaterial;
}
