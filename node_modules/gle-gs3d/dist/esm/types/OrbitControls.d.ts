import { EventDispatcher } from 'three';
declare class OrbitControls extends EventDispatcher<any> {
    _domElementKeyEvents: any;
    autoRotate: any;
    autoRotateSpeed: any;
    dampingFactor: any;
    dispose: any;
    domElement: any;
    enableDamping: any;
    enablePan: any;
    enableRotate: any;
    enableZoom: any;
    enabled: any;
    getAzimuthalAngle: any;
    getDistance: any;
    getPolarAngle: any;
    keyPanSpeed: any;
    keys: any;
    listenToKeyEvents: any;
    maxAzimuthAngle: any;
    maxDistance: any;
    maxPolarAngle: any;
    maxZoom: any;
    minAzimuthAngle: any;
    minDistance: any;
    minPolarAngle: any;
    minZoom: any;
    mouseButtons: any;
    object: any;
    panSpeed: any;
    position0: any;
    reset: any;
    rotateSpeed: any;
    saveState: any;
    screenSpacePanning: any;
    stopListenToKeyEvents: any;
    target: any;
    target0: any;
    touches: any;
    update: any;
    zoom0: any;
    zoomSpeed: any;
    zoomToCursor: any;
    constructor(object: any, domElement: any);
}
export { OrbitControls };
