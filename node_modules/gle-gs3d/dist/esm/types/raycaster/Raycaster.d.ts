import { Camera, Vector2, Vector3 } from "three";
import { Ray } from './Ray';
import { Hit } from './Hit';
import { SplatMesh } from "../SplatMesh";
import { SplatTree } from "../splattree/SplatTree";
import { SplatTreeNode } from "../splattree/SplatTreeNode";
export declare class Raycaster {
    ray: Ray;
    private camera;
    constructor(origin?: Vector3, direction?: Vector3);
    setFromCameraAndScreenPosition: (this: Raycaster, camera: Camera, screenPosition: Vector2, screenDimensions: Vector2) => void;
    intersectSplatMesh: (this: Raycaster, splatMesh: SplatMesh, outHits?: Hit[]) => Hit[];
    castRayAtSplatTreeNode: (this: Raycaster, ray: Ray, splatTree: SplatTree, node: SplatTreeNode, outHits?: Hit[]) => Hit[] | undefined;
}
