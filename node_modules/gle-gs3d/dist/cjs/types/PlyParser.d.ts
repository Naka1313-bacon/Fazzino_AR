import { Vector3Tuple } from "three";
import { SplatBuffer } from './SplatBuffer';
interface SplatBucket {
    'splats': number[];
    'center': Vector3Tuple;
}
export declare class PlyParser {
    plyBuffer: ArrayBuffer;
    constructor(plyBuffer: ArrayBuffer);
    decodeHeader(plyBuffer: ArrayBuffer): {
        splatCount: number;
        propertyTypes: {
            [propertyName: string]: string;
        };
        vertexData: DataView;
        headerOffset: number;
    };
    readRawVertexFast(vertexData: DataView, offset: number, fieldOffsets: {
        [fieldName: string]: number;
    }, propertiesToRead: string[], propertyTypes: {
        [propertyName: string]: string;
    }, outVertex: any): void;
    parseToSplatBuffer(compressionLevel?: number, minimumAlpha?: number): SplatBuffer;
    computeBuckets(positions: any): SplatBucket[];
}
export {};
